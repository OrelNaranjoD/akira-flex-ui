name: Build and Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "docs/**"
  workflow_dispatch:
    inputs:
      release_type:
        description: "Type of release (patch, minor, major)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  validate-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Configure npm for GitHub Packages
        run: |
          echo "@orelnaranjod:registry=https://npm.pkg.github.com/" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${FLEX_LIB_TOKEN}" >> .npmrc
        env:
          FLEX_LIB_TOKEN: ${{ secrets.FLEX_LIB_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm run test
        env:
          NODE_ENV: test

      - name: Build application
        run: npm run build

      - name: Check build artifacts (Nx multi-app)
        run: |
          for APP in "akira-flex-landing" "akira-flex-platform" "akira-flex-tenant"; do
            BUILD_DIR="dist/apps/$APP/browser"
            echo "Checking build artifacts in $BUILD_DIR"
            
            # Check if directory exists
            if [ ! -d "$BUILD_DIR" ]; then
              echo "Build failed - directory $BUILD_DIR does not exist"
              exit 1
            fi
            
            # List directories for debugging
            echo "Subdirectories in $BUILD_DIR:"
            ls -la "$BUILD_DIR"
            
            # Check for localized builds (en, es directories)
            LOCALES=("en" "es")
            for LOCALE in "${LOCALES[@]}"; do
              LOCALE_DIR="$BUILD_DIR/$LOCALE"
              if [ ! -d "$LOCALE_DIR" ]; then
                echo "Warning - locale directory $LOCALE_DIR not found, skipping"
                continue
              fi
              
              echo "Checking locale: $LOCALE"
              
              # Check for index.html in locale directory
              if [ ! -f "$LOCALE_DIR/index.html" ]; then
                echo "Build failed - index.html not found in $LOCALE_DIR"
                exit 1
              fi
              
              # Check for JS files
              if [ -z "$(find $LOCALE_DIR -name '*.js' -type f)" ]; then
                echo "Build failed - no JS files found in $LOCALE_DIR"
                exit 1
              fi
              
              # Check for CSS files
              if [ -z "$(find $LOCALE_DIR -name '*.css' -type f)" ]; then
                echo "Build failed - no CSS files found in $LOCALE_DIR"
                exit 1
              fi
              
              echo "âœ“ Locale $LOCALE verified successfully"
            done
            
            echo "Build successful - verified in $BUILD_DIR"
            du -sh "$BUILD_DIR"
          done

  bump-version:
    needs: validate-and-build
    if: success()
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Apply formatting and linting fixes
        run: |
          npm run lint

      - name: Generate changelog
        run: |
          npm run changelog || echo "No changelog script found, skipping..."

      - name: Bump version and commit changes
        id: bump
        uses: phips28/gh-action-bump-version@v11.0.4
        with:
          patch-wording: "chore,docs,style,refactor,test,fix,perf"
          minor-wording: "feat,feature"
          major-wording: "BREAKING CHANGE,breaking,!"
          tag-prefix: "v"
          default: ${{ github.event.inputs.release_type || 'patch' }}
          commit-message: "chore: release {{version}} [skip ci]"
          push: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output new version
        id: output-version
        run: echo "new_version=v$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    outputs:
      new_version: ${{ steps.output-version.outputs.new_version }}
